@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";


// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключить если есть файл иконочного шрифта
@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Montserrat";
$fontSize: rem(16);

// Основные цвета
// vers 1
// $background: #fff;
// $mainColor: #333;
// $mainBackground: #788ec5;
// $additionMainBackground: #D44343;
// $cardBackground:#e3ebf6;
// $boldCardText: #415397;
// $payBtn: #00c271;
// $selectBackground: #788ec5;

// vers 2
$background: #333;
$mainColor: #fff;
$mainBackground: #D44343;
$additionMainBackground: #D44343;
$cardBackground:#fedcdb91;
$boldCardText: #02508e;
$payBtn: #00c271;
$selectBackground: #333;

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1170;
// Общий отступ у контейнера
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth);
$tablet: em(991.98);
$mobile: em(767.98);
$mobileSmall: em(479.98);

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {
	width: 100%;
	height: 100%;
	background-color: $background;
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
	// Сайт загружен
	.loaded & {
	}
}
// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	width: 100%;
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	> .main {
		flex: 1 1 auto;
		padding:rem(0) 0 rem(60) 0;
		display: flex;
		flex-direction: column;
	}
	> * {
		min-width: 0;
	}
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных страниц
@import "tariffs";
@import "devices";
@import "payment";
@import "page-status";

@import "header";



